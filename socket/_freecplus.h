/****************************************************************************************/
/*   ????????_freecplus.h?????????freecplus?????®≤?????????????????                */
/*   ?????C?????????(www.freecplus.net) ?????20190525??                              */
/*                                                                                      */
/*   freecplus???????ßø???????????                                                    */
/*     ??????? (c) 2008-2020??????ß÷???C???????????www.freecplus.net????             */
/*     ??????¶ ¶≈?????????????????????????????????????????®¢??????????       */
/*   ????????ËÂ??????????????????/??????????????????????????ÿt????????        */
/*   ???????????????????                                                           */
/*     ?????????????????ß⁄????ßÿ???????????????????????????????                     */
/*     ???¶¥?????????????????????????????????????????ùp???????????????????     */
/*   ?????????????????                                                               */
/*   freecplus???????ßø???????????                                                    */
/****************************************************************************************/

#ifndef __FREECPLUS_H
#define __FREECPLUS_H 1

#include "_cmpublic.h"

///////////////////////////////////// /////////////////////////////////////
// ??????????????????????????

// ?????strcpy??????
// dest??????????????????????????STRCPY?????ß›???????ß‘??????
// destlen??????????dest????????ß≥??
// src??????????
// ???????????????dest??????
char *STRCPY(char* dest,const size_t destlen,const char* src);

// ?????strncpy??????
// dest??????????????????????????STRNCPY?????ß›???????ß‘??????
// destlen??????????dest????????ß≥??
// src??????????
// n????????????????
// ???????????????dest??????
char *STRNCPY(char* dest,const size_t destlen,const char* src,size_t n);

// ?????strcat??????
// dest????????????
// destlen??????????dest????????ß≥??
// src???????????????
// ???????????????dest??????
char *STRCAT(char* dest,const size_t destlen,const char* src);

// ?????strncat??????
// dest????????????
// destlen??????????dest????????ß≥??
// src???????????????
// n???????????????
// ???????????????dest??????
char *STRNCAT(char* dest,const size_t destlen,const char* src,size_t n);

// ?????sprintf??????
// ????????(...)????fmt?????????????dest??????ß≥?
// dest??????????????????????????SPRINTF?????ß›???????ß‘??????
// destlen??????????dest????????ß≥?????????????????????????destlen-1??????????????????
// fmt???????????????
// ...????????????????fmt?ß÷??????
// ????????????????????????????????????????????
int SPRINTF(char *dest,const size_t destlen,const char *fmt,...);

// ?????snprintf??????
// ????????(...)????fmt?????????????dest??????ß≥?
// dest??????????????????????????SNPRINTF?????ß›???????ß‘??????
// destlen??????????dest????????ß≥?????????????????????????destlen-1??????????????????
// n???????????????????n-1????dest?ßµ????n>destlen-1?????destlen-1??
// fmt???????????????
// ...????????????????fmt?ß÷??????
// ????????????????????????????????????????????
// ???windows??linux?????snprintf???????????????n???°¬????ß”?????????????????????????
// ????10,??????????n????10?????????windows????dest????????10??linux????dest????????9??
int SNPRINTF(char *dest,const size_t destlen,size_t n,const char *fmt,...);

// ?????????????????????
// str?????????????????
// chr???????????????
void DeleteLChar(char *str,const char chr);

// ?????????????????????
// str?????????????????
// chr???????????????
void DeleteRChar(char *str,const char chr);

// ??????????????????????????
// str?????????????????
// chr???????????????
void DeleteLRChar(char *str,const char chr);

// ????????ß÷?ß≥ß’?????????ß’???????????????????
// str???????????????????char[]??string?????????
void ToUpper(char *str);
void ToUpper(string &str);

// ????????ß÷??ß’????????ß≥ß’???????????????????
// str???????????????????char[]??string?????????
void ToLower(char *str);
void ToLower(string &str);

// ??????ùI??????
// ???????str?ßµ?????????????str1?????ùI??????str2??
// str?????????????????
// str1??????????
// str2??????????
// bloop????????????ùI??
// ???
// 1?????str2??str1??????ùI??str?????????????str?????????????????????
// 2?????str2?ß—?????str1?????????bloop?true?????????????????????UpdateStr???????????
void UpdateStr(char *str,const char *str1,const char *str2,const bool bloop=true);

// ???????????????????????????ß≥???????????????????ß≥?
// src??????????
// dest????????????
// bsigned?????????????+??-????true-??????false-????????
// bdot????????ß≥????????????true-??????false-????????
void PickNumber(const char *src,char *dest,const bool bsigned,const bool bdot);

// ???????????ßÿ???????????????????????????
// str??????ßÿ??????????????????????????"freecplus.cpp"??
// rules????????????????????"*"????????????????????????????????????????"*.h,*.cpp"??
// ???1??str?????????"*"??rules???????"*"??2?????????ßÿ?str??????rules???????????????ß≥ß’??
bool MatchStr(const string str,const string rules);

// ???????????ßÿ???????????????????????????
// ????MatchFileName??????????????∑⁄??
bool MatchFileName(const string in_FileName,const string in_MatchStr);

// ??????????????????????????????????????????????????????????????????
// str???????????????
// ????????????str????????
int Words(const char *str);
///////////////////////////////////// /////////////////////////////////////


// CCmdStr?????????ßŸ?????????????
// ???????????????????1+?????+???????2+?????+???????3+?????+...+???????n??
// ???ª«"messi,10,striker,30,1.72,68.5,Barcelona"??????????????°¬???????????????????
// ???????????¶À?®¢???????????????ßπ????????????????????????????
class CCmdStr
{
public:
  vector<string> m_vCmdStr;  // ???????????????

  CCmdStr();  // ????????

  // ???????????m_vCmdStr?????ß≥?
  // buffer???????????????
  // sepstr??buffer?ß”?????????????sepstr?????????????????????????????????","??" "??"|"??"~!~"??
  // bdelspace?????????????????????????true-?????false-??????????????
  void SplitToCmd(const string buffer,const char *sepstr,const bool bdelspace=true);

  // ?????????¶≈????????m_vCmdStr???????ß≥??
  int CmdCount();

  // ??m_vCmdStr???????????????
  // inum????¶≈????????????????°¿???0?????
  // value?????????????????????????????
  // ???????true-????????inum??????????m_vCmdStr???????ß≥??????????
  bool GetValue(const int inum,char *value,const int ilen=0); // ???????ilen????0??
  bool GetValue(const int inum,int  *value); // int??????
  bool GetValue(const int inum,unsigned int *value); // unsigned int??????
  bool GetValue(const int inum,long *value); // long??????
  bool GetValue(const int inum,unsigned long *value); // unsigned long??????
  bool GetValue(const int inum,double *value); // ?????double??
  bool GetValue(const int inum,bool *value); // bool???

  ~CCmdStr(); // ??????????
};
///////////////////////////////////// /////////////////////////////////////


///////////////////////////////////// /////////////////////////////////////
// ????xml??????????????â^
// xml?????????????????????
// <filename>/tmp/freecplus.h</filename><mtime>2020-01-01 12:20:35</mtime><size>18348</size>
// <filename>/tmp/freecplus.cpp</filename><mtime>2020-01-01 10:10:15</mtime><size>50945</size>
// xmlbuffer??????????xml??????????
// fieldname????¶≈???????
// value????????????????????????????????bool??int??insigned int??long??unsigned long??double??char[]??
// ?????value???????????????char []????????value?????????????????????????????????????????ilen??????????????????????ilen??????0?????????????
// ???????true-????????fieldname????????????????????????????
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,bool *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,int  *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,unsigned int *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,long *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,unsigned long *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,double *value);
bool GetXMLBuffer(const char *xmlbuffer,const char *fieldname,char *value,const int ilen=0);
///////////////////////////////////// /////////////////////////////////////

///////////////////////////////////// /////////////////////////////////////
/*
  ????????????
  stime????????????????????????
  timetvl???????????????¶À????0????????????????30?????????30??????????-30?????????30??????????
  fmt?????????????fmt????????âÿyyyy-????mm-?°§??dd-?????hh24-ß≥???mi-?????ss-??
  ????"yyyy-mm-dd hh24:mi:ss"???????????????
  "yyyy-mm-dd hh24:mi:ss"
  "yyyymmddhh24miss"
  "yyyy-mm-dd"
  "yyyymmdd"
  "hh24:mi:ss"
  "hh24miss"
  "hh24:mi"
  "hh24mi"
  "hh24"
  "mi"
  ???
    1??ß≥???????????hh24??????hh?????????????????????????????????????????
    2???????ß‘?????????????????????????????????????????????????timetostr??????????????????
    3?????®≤???????????fmt??????????????stime???????????
    4?????????????¶À??????????????¶À????¶À???????????¶À??????”Õ0??
*/
void LocalTime(char *stime,const char *fmt=0,const int timetvl=0);

// ???????????????????????????????
// ltime??????????????
// stime???????????????
// fmt?????????????stime????????LocalTime??????fmt????????????fmt???????????stime??????
void timetostr(const time_t ltime,char *stime,const char *fmt=0);

// ???????????????????????????????
// stime?????????????????????????????????yyyymmddhh24miss???????????????????????
// ??????????????????????stime???????????????-1??
time_t strtotime(const char *stime);

// ????????????????????????????????????????????????????
// in_stime??????????????????????????????????????yyyymmddhh24miss???????????????????????
// out_stime????????????????????
// timetvl??????????????????????????????????????
// fmt?????????????out_stime????????LocalTime??????fmt?????????
// ???in_stime??out_stime???????????????????????????????????out_stime???????????
// ???????true-?????false-????????????????????????in_stime???????????
bool AddTime(const char *in_stime,char *out_stime,const int timetvl,const char *fmt=0);
///////////////////////////////////// /////////////////////////////////////

///////////////////////////////////// /////////////////////////////////////
// ??????????????????????
class CTimer
{
private:
  struct timeval m_start;   // ???????????
  struct timeval m_end;     // ??????????
  double m_dstart,m_dend;   // double?????????????

  // ????????
  void Start();
public:
  CTimer();  // ???????ß›????Start??????

  // ????????????????¶À????ß≥????????????
  double Elapsed();
};
///////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////// /////////////////////////////////////
// ????????????

// ???????°§?????????????????????????
// pathorfilename??????°§?????????????????
// bisfilename?????pathorfilename???????true-pathorfilename?????????????????????????true??
// ???????true-?????false-???????????????????ß’?????????????1????????2??pathorfilename?????????????????????????3??????????
bool MKDIR(const char *pathorfilename,bool bisfilename=true);


// ???????????????ß÷?????ß“??????
class CDir
{
public:
  char m_DirName[301];        // ?????????ª«/tmp/root??
  char m_FileName[301];       // ??????????????????????ª«data.xml??
  char m_FullFileName[301];   // ?????????????????????ª«/tmp/root/data.xml??
  int  m_FileSize;            // ??????ß≥????¶À??????
  char m_ModifyTime[21];      // ????????¶¡??????????stat?????st_mtime?????
  char m_CreateTime[21];      // ?????????????stat?????st_ctime?????
  char m_AccessTime[21];      // ????????¶¡???????????stat?????st_atime?????
  char m_DateFMT[25];         // ????????????????SetDateFMT???????®¢?

  vector<string> m_vFileName; // ???OpenDir??????????????°§????????çÀ??
  int m_pos;                  // ????m_vFileName??????¶À???????????ReadDir????m_pos??1??

  CDir();  // ????????

  void initdata(); // ??????????????

  // ??????????????????"yyyy-mm-dd hh24:mi:ss"??"yyyymmddhh24miss"?????????????
  void SetDateFMT(const char *in_DateFMT);

  // ????????????ß÷?????ß“???????????m_vFileName?????ß≥?
  // in_DirName????????????????????°§??????/tmp/root??
  // in_MatchStr?????????????????????????????????????????¶Ã?freecplus????MatchStr??????
  // in_MaxCount???????????????????????10000????
  // bAndChild???????????????????false-??????????
  // bSort????????????????ß“?????m_vFileName?????ß÷??????????????????false-??????
  // ???????true-?????false-???????in_DirName??????????????????OpenDir?????????????????????????????false?????????????in_DirName???????????ßÿ??????????false??
  bool OpenDir(const char *in_DirName,const char *in_MatchStr,const unsigned int in_MaxCount=10000,const bool bAndChild=false,bool bSort=false);

  // ?????????¸D??????OpenDir()????????CDir??????????????????
  bool _OpenDir(const char *in_DirName,const char *in_MatchStr,const unsigned int in_MaxCount,const bool bAndChild);

  // ??m_vFileName?????ß›????????????????????????????????ß≥??????????????
  // ????OpenDir???????m_vFileName??????????m_pos????????????ReadDir????m_pos??1??
  // ??m_posß≥??m_vFileName.size()??????true???????false??
  bool ReadDir();

  ~CDir();  // ??????????
};

///////////////////////////////////// /////////////////////////////////////

///////////////////////////////////// /////////////////////////////////////
// ??????????????????

// ????????????Linux????rm????
// filename??????????????????????????°§???????????????/tmp/root/data.xml??
// times??????????????????????1?????ˆˆ?????3?????????????????????????????1?¶¬???????????2?????????????¶Œ????çI????????ßµ??????????????usleep(100000)?????????
// ???????true-?????false-??????????????????????
// ?????????ßµ???????REMOVE????????remove??????
bool REMOVE(const char *filename,const int times=1);

// ???????????????Linux????mv????
// srcfilename????????????????????°§???????????
// destfilename??????????????????????°§???????????
// times?????????????????????????1?????ˆˆ?????3????????????????????????????????1?¶¬???????????2?????????????¶Œ????çI????????ßµ?????????????????usleep(100000)?????????
// ???????true-?????false-???????????????????????????????????????????????????????????????????????????????
// ???????????????????????????destfilename?????ß—?????????
// ?????????ßµ???????RENAME????????rename??????
bool RENAME(const char *srcfilename,const char *dstfilename,const int times=1);

// ?????????????Linux????cp????
// srcfilename????????????????????°§???????????
// destfilename??????????????????????°§???????????
// ???????true-?????false-????????????????????????????????
// ???
// 1?????????????????????????destfilename?????ß÷???????
// 2???????????????ßµ????????????????????????????????????destfilename???????ßﬁ???????????????
// 3??????????????????????????????????Linux??cp???????
bool COPY(const char *srcfilename,const char *dstfilename);

// ?????????ß≥??
// filename??????????????????????????°§???????????
// ??????????????????????ßŸ???????????-1???????????????ß≥????¶À??????
int FileSize(const char *filename);

// ???????????
// filename??????????????????????????°§???????????
// mtime??????????????????stat?????st_mtime??
// fmt????????????????????LocalTime???????????????"yyyymmddhh24miss"??
// ??????????????????????ßŸ???????????false?????????true??
bool FileMTime(const char *filename,char *mtime,const char *fmt=0);

// ????????????????????
// filename??????????????????????????°§???????????
// stime?????????????????????????????????yyyymmddhh24miss???????????????????????
// ???????true-?????false-??????????????errno?ß≥?
bool UTime(const char *filename,const char *mtime);

// ???????
// FOPEN????????fopen????????????????????ß—???????????????????????
// FOPEN?????????????????fopen????????????
// ?????????ßµ???FOPEN????????fopen??????
FILE *FOPEN(const char *filename,const char *mode);

// ?????????ßÿ????ß≥?
// fp????????????
// buffer?????????????????buffer???????readsize+1??????????????????????????????????????
// readsize?????¶ƒ????????????????????????????ßﬂ?????????????????
// endbz??????????????????????????????????"\n"??????????
// ???????true-?????false-??????????????????????????????????
bool FGETS(const FILE *fp,char *buffer,const int readsize,const char *endbz=0);

// ?????????????
class CFile
{
private:
  FILE *m_fp;        // ??????
  bool  m_bEnBuffer; // ?????????»…true-?????false-??????????????®¢?
  char  m_filename[301]; // ?????????????????°§???????????
  char  m_filenametmp[301]; // ????????????m_filename???".tmp"??

public:
  CFile();   // ????????

  bool IsOpened();  // ?ßÿ??????????????????true-????false-¶ƒ???

  // ???????
  // filename????????????????????????°§???????????
  // openmode???????????????fopen??????????????
  // bEnBuffer???????????»…true-?????false-??????????????®¢?
  // ??????????????????????????????????
  bool Open(const char *filename,const char *openmode,bool bEnBuffer=true);

  // ???????????????????
  bool CloseAndRemove();

  // ???????????????????????Open?????????
  // ???OpenForRename?????filename???".tmp"??????????????openmode?????"a"??"a+"??"w"??"w+"??
  bool OpenForRename(const char *filename,const char *openmode,bool bEnBuffer=true);
  // ?????????????OpenForRename??????????????????????filename??
  bool CloseAndRename();

  // ????fprintf?????ß’?????????????fprintf??????????????????????????
  void Fprintf(const char *fmt,...);

  // ??????ßÿ??????ßŸ?"\n"????????ß≥?
  // buffer?????????????????buffer???????readsize+1??????????????????????
  // readsize?????¶ƒ?????????????????????????????????"\n"???????????
  // bdelcrt?????????ßﬂ??????"\r"??"\n"??true-?????false-????????????false??
  // ???????true-?????false-??????????????????????????????????
  bool Fgets(char *buffer,const int readsize,bool bdelcrt=false);

  // ?????????ßÿ????ß≥?
  // buffer?????????????????buffer???????readsize+1??????????????????????????????????????
  // readsize?????¶ƒ????????????????????????????????????????????
  // endbz??????????????????????????????????"\n"??????????
  // ???????true-?????false-??????????????????????????????????
  bool FFGETS(char *buffer,const int readsize,const char *endbz=0);

  // ??????ßÿ??????Óï
  // ptr?????????????????
  // size?????¶ƒ??????????????
  // ??????????¶ƒ?????ß‘????????????????????¶ƒ???????????????size???????????????????????????????????
  size_t Fread(void *ptr,size_t size);

  // ???????ß’??????Óï
  // ptr????ß’????????????
  // size????ß’???????????????
  // ??????????¶√??ß’????????????????????????????????size??
  size_t Fwrite(const void *ptr,size_t size);

  // ?????????????????????????????????
  void Close();

 ~CFile();   // ?????????????Close??????
};

///////////////////////////////////// /////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////
// ??????????????????

// ????????????
class CLogFile
{
public:
  FILE   *m_tracefp;           // ?????????
  char    m_filename[301];     // ????????????????????°§????
  char    m_openmode[11];      // ???????????????????"a+"??
  bool    m_bEnBuffer;         // ß’??????????????®∞?????????????????????®¢?
  long    m_MaxLogSize;        // ????????????ß≥????¶ÀM????100M??
  bool    m_bBackup;           // ???????ß›???????????ß≥????m_MaxLogSize??????ß›????????®¢?

  // ????????
  // MaxLogSize??????????????ß≥????¶ÀM????100M????ß≥?10M??
  CLogFile(const long MaxLogSize=100);  

  // ??????????
  // filename??????????????????????°§?????????????ß÷?????????????????????
  // openmode?????????????????fopen???????????????????????"a+"??
  // bBackup?????????ß›???true-?ß›???false-???ß›?????????????????ßµ?????????????????????????bBackup?????false??
  // bEnBuffer????????????????????true-?????false-????????????????????????ß’?????????ß÷????????????ß’???????????????®¢?
  bool Open(const char *filename,const char *openmode=0,bool bBackup=true,bool bEnBuffer=false);

  // ?????????????m_MaxLogSize??????????????????????????????????????????????????????
  // ???????????????????????????????????/tmp/log/filetodb.log.20200101123025??
  // ??????????????ßµ????????????ß›????????????ßµ????????????ß›???
  bool BackupLogFile();

  // ??????ß’??????????fmt???????????°¬?????printf?????????
  // Write??????ß’????????WriteEx??????ß’???
  bool Write(const char *fmt,...);
  bool WriteEx(const char *fmt,...);

  // ?????????
  void Close();

  ~CLogFile();  // ?????????????Close??????
};
///////////////////////////////////////////////////////////////////////////////////////////////////

// ?????????????
// CIniFile??????????????ini???????xml????????????????ª«
/*
 * ???????hssms.xml
<?xml version="1.0" encoding="gbk" ?>
<root>
    <!-- ???????ß÷??????????? -->
    <logpath>/log/hssms</logpath>

    <!-- ?????????????? -->
    <connstr>hssms/smspwd@hssmszx</connstr>

    <!-- ???????????????? -->
    <datapath>/data/hssms</datapath>

    <!-- ???????????ip????? -->
    <serverip>192.168.1.1</serverip>

    <!-- ????????????????? -->
    <port>5058</port>

    <!-- ?????®Æ??????true-???false-?? -->
    <online>true</online>
</root>
*/

class CIniFile
{
public:
  string m_xmlbuffer; // ?????????????????????LoadFile????????

  CIniFile();

  // ??????????????????m_xmlbuffer????????ß≥?
  bool LoadFile(const char *filename);
 
  // ????????????
  // fieldname????¶≈???????
  // value???????????????????????¶≈???????bool??int??insigned int??long??unsigned long??double??char[]??
  // ?????value???????????????char []????????value???????????????????????????????
  // ???????ilen??????????????????????ilen??????0?????????????????????????
  // ???????true-?????false-????
  bool GetValue(const char *fieldname,bool *value);
  bool GetValue(const char *fieldname,int  *value);
  bool GetValue(const char *fieldname,unsigned int *value);
  bool GetValue(const char *fieldname,long *value);
  bool GetValue(const char *fieldname,unsigned long *value);
  bool GetValue(const char *fieldname,double *value);
  bool GetValue(const char *fieldname,char *value,const int ilen=0);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// ??????socket???????????

// socket??????????
class CTcpClient
{
public:
  int  m_sockfd;    // ??????socket.
  char m_ip[21];    // ??????ip?????
  int  m_port;      // ?????????????
  bool m_btimeout;  // ????Read??Write???????????????????????true-?????false-¶ƒ?????
  int  m_buflen;    // ????Read?????????????????ß≥????¶À??????

  CTcpClient();  // ????????

  // ?????????????????
  // ip????????ip?????
  // port???????????????
  // ???????true-?????false-????
  bool ConnectToServer(const char *ip,const int port);

  // ?????????????????????
  // buffer?????????????????????????????????m_buflen????????ß≥?
  // itimeout?????????????????¶À?????????0-????????
  // ???????true-?????false-??????????????????1?????????????????m_btimeout??????????true??2??socket??????????®¢?
  bool Read(char *buffer,const int itimeout=0);

  // ??????????????
  // buffer???????????????????????
  // ibuflen??????????????ß≥????¶À??????????0????????????ascii???????ibuflen?0???????????????????ibuflen??????????????ß≥??
  // ???????true-?????false-??????????????socket??????????®¢?
  bool Write(const char *buffer,const int ibuflen=0);

  // ??????????????
  void Close();

  ~CTcpClient();  // ??????????????socket??????????
};

// socket??????????
class CTcpServer
{
private:
  int m_socklen;                    // ????struct sockaddr_in???ß≥??
  struct sockaddr_in m_clientaddr;  // ?????????????
  struct sockaddr_in m_servaddr;    // ?????????????
public:
  int  m_listenfd;   // ??????????????socket??
  int  m_connfd;     // ???????????????socket??
  bool m_btimeout;   // ????Read??Write???????????????????????true-?????false-¶ƒ?????
  int  m_buflen;     // ????Read?????????????????ß≥????¶À??????

  CTcpServer();  // ????????

  // ???????????
  // port??????????????????????
  // ???????true-?????false-???????????????port???????????ß“??????????????????
  bool InitServer(const unsigned int port); 

  // ?????????????????????
  // ???????true-?????????????????????false-????Accept???ßÿ?????Accept????????????Accept??
  bool Accept();

  // ?????????ip?????
  // ?????????????ip???????"192.168.1.100"??
  char *GetIP();

  // ?????????????????????
  // buffer?????????????????????????????????m_buflen????????ß≥?
  // itimeout?????????????????¶À?????????0-????????
  // ???????true-?????false-??????????????????1?????????????????m_btimeout??????????true??2??socket??????????®¢?
  bool Read(char *buffer,const int itimeout=0);

  // ??????????????
  // buffer???????????????????????
  // ibuflen??????????????ß≥????¶À??????????0????????????ascii???????ibuflen?0???????????????????ibuflen??????????????ß≥??
  // ???????true-?????false-??????????????socket??????????®¢?
  bool Write(const char *buffer,const int ibuflen=0);

  // ????????socket????m_listenfd????????????????????????????ß≥?
  void CloseListen();

  // ????????socket????m_connfd????????????????????????????ß≥?
  void CloseClient();

  ~CTcpServer();  // ??????????????socket??????????
};

// ????socket?????????????????
// sockfd???????socket?????
// buffer?????????????????????
// ibuflen?????¶√??????????????????
// itimeout??????????????????¶À?????????0-????????
// ???????true-?????false-??????????????????1??????????2??socket??????????®¢?
bool TcpRead(const int sockfd,char *buffer,int *ibuflen,const int itimeout=0);

// ??socket????????????
// sockfd???????socket?????
// buffer???????????????????????
// ibuflen??????????????????????????????ascii???????ibuflen?0???????????????????ibuflen??????????????ß≥??
// ???????true-?????false-??????????????socket??????????®¢?
bool TcpWrite(const int sockfd,const char *buffer,const int ibuflen=0);

// ???????????socket?ßÿ???????
// sockfd???????????socket?????
// buffer?????????????????????
// n?????¶Õ???????????????
// ???????????????n??????????true??socket????????°¬???false??
bool Readn(const int sockfd,char *buffer,const size_t n);

// ???????????socket??ß’???????
// sockfd???????????socket?????
// buffer???????????????????????
// n????????????????????
// ????????????????n??????????true??socket????????°¬???false??
bool Writen(const int sockfd,const char *buffer,const size_t n);

// ??????socket???????????
///////////////////////////////////// /////////////////////////////////////

////////////////////////////////////////////////////////////////////////////
// ????????????????????????????freecplus????

// ???????????????????
void CloseIOAndSignal();

// ?????????????
// ?°§???????????ß≥?????????
struct st_fileinfo
{
  char filename[301];
  int  filesize;
  char mtime[21];
};

// ??socket????????????
// sockfd???????socket?????
// stfileinfo???????????????????struct st_fileinfo?????
// logfile????????????????????????????0??????????????????
// ???????true-?????false-??????????????????????1??sockfd???????2?????????????????????????
bool SendFile(int sockfd,struct st_fileinfo *stfileinfo,CLogFile *logfile=0);

// ????socket?????????????????
// sockfd???????socket?????
// stfileinfo???????????????????struct st_fileinfo?????
// logfile????????????????????????????0??????????????????
// ???????true-?????false-??????????????????????1??sockfd???????2?????????????????????????
bool RecvFile(int sockfd,struct st_fileinfo *stfileinfo,CLogFile *logfile=0);
///////////////////////////////////// /////////////////////////////////////


#endif
